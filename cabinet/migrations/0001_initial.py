# Generated by Django 5.0.4 on 2024-05-07 10:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hosting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(default='Samara', max_length=20)),
                ('port', models.IntegerField()),
                ('cores', models.IntegerField()),
                ('address', models.TextField()),
                ('disk_space', models.IntegerField()),
                ('memory_space', models.IntegerField()),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('about_user', models.CharField(max_length=200)),
                ('user_image', models.CharField(max_length=200)),
                ('wallet', models.FloatField(default=0.0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.CharField(max_length=300, primary_key=True, serialize=False)),
                ('docker_image_link', models.CharField(blank=True, max_length=200, null=True)),
                ('docker_container_link', models.CharField(blank=True, max_length=200, null=True)),
                ('login', models.CharField(blank=True, max_length=45, null=True)),
                ('password', models.CharField(blank=True, max_length=45, null=True)),
                ('cores', models.IntegerField()),
                ('port', models.IntegerField()),
                ('disk_space', models.IntegerField()),
                ('memory_space', models.IntegerField()),
                ('cost', models.FloatField(default=0.0)),
                ('hosting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cabinet.hosting')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('done_at', models.DateTimeField()),
                ('sum', models.IntegerField()),
                ('type', models.CharField(max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user', 'done_at'],
                'unique_together': {('user', 'done_at')},
            },
        ),
        migrations.CreateModel(
            name='ContainerStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('cpu', models.IntegerField()),
                ('ram', models.IntegerField()),
                ('disk', models.IntegerField()),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cabinet.container')),
            ],
            options={
                'ordering': ['container', 'time'],
                'unique_together': {('container', 'time')},
            },
        ),
        migrations.CreateModel(
            name='User_rent_docker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('pay', models.BooleanField()),
                ('cost', models.IntegerField()),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cabinet.container')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user', 'container'],
                'unique_together': {('user', 'container')},
            },
        ),
    ]
